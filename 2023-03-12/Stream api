Stream api allows functional style oper
filter
fetching
collecting
single sorting mech--comparable
mul sort---comparator



import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
 
public class Cust {
int cid;
String cName;
int age;
public Cust(int cid, String cName, int age) {
 
this.cid = cid;
this.cName = cName;
this.age = age;
}
public static void main(String[] args) {
List<Cust> cl = new ArrayList<>();
cl.add(new Cust(1,"jaya",36));
cl.add(new Cust(2,"umesh",83));
cl.add(new Cust(3,"raja",52));
cl.add(new Cust(4,"amal",69));
/*
* List<Integer> ca = cl.stream().filter(c->c.age>70) .map(c->c.age)
* .collect(Collectors.toList()); System.out.println(ca);
*/
Cust ca = cl.stream().max((c1,c2)->c1.age>c2.age?1:-1).get();
System.out.println("Senior ..."+ca.cid+" "+ca.cName+" "+ca.age);
Cust ca1 = cl.stream().min((c1,c2)->c1.age>c2.age?1:-1).get();
System.out.println("Junior ..."+ca1.cid+" "+ca1.cName+" "+ca1.age);
 
}
}